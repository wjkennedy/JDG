// 
// Decompiled by Procyon v0.6.0
// 

package com.atlassian.jira.plugins.datagenerator.creators.project;

import com.atlassian.jira.security.roles.ProjectRoleImpl;
import com.atlassian.jira.plugins.datagenerator.creators.retry.RetryFunction;
import java.util.function.Function;
import org.springframework.beans.factory.annotation.Autowired;
import com.atlassian.plugin.spring.scanner.annotation.imports.ComponentImport;
import com.atlassian.jira.project.Project;
import com.atlassian.jira.user.ApplicationUser;
import java.util.Collection;
import com.atlassian.jira.plugins.datagenerator.creators.listeners.CreationEmitter;
import com.atlassian.jira.security.roles.ProjectRoleManager;
import org.springframework.stereotype.Component;
import com.atlassian.jira.plugins.datagenerator.creators.CreatedEvent;
import com.atlassian.jira.security.roles.ProjectRole;
import com.atlassian.jira.plugins.datagenerator.creators.UniqueNameRequiringCreatorImpl;

@Component
public class ProjectRoleCreator extends UniqueNameRequiringCreatorImpl<ProjectRole> implements CreatedEvent<ProjectRoleCreator>
{
    private final ProjectRoleManager projectRoleManager;
    private final ProjectRoleActorCreator projectRoleActorCreator;
    private final DefaultProjectRoleActorCreator defaultProjectRoleActorCreator;
    private final CreationEmitter emitter;
    private Collection<ApplicationUser> defaultActors;
    private Collection<ApplicationUser> actors;
    private Collection<Project> projects;
    
    @Autowired
    public ProjectRoleCreator(@ComponentImport final ProjectRoleManager projectRoleManager, final ProjectRoleActorCreator projectRoleActorCreator, final DefaultProjectRoleActorCreator defaultProjectRoleActorCreator) {
        this.emitter = new CreationEmitter();
        this.projectRoleManager = projectRoleManager;
        this.projectRoleActorCreator = projectRoleActorCreator;
        this.defaultProjectRoleActorCreator = defaultProjectRoleActorCreator;
    }
    
    @Override
    public ProjectRoleCreator onCreated(final Function<Integer, ?> lambda) {
        this.emitter.register(lambda);
        return this;
    }
    
    @Override
    public ProjectRole create(final String projectRoleName) {
        return new RetryFunction<ProjectRole>().execute(() -> {
            final ProjectRole projectRole = this.projectRoleManager.createRole((ProjectRole)new ProjectRoleImpl(projectRoleName, "A role generated by Jira Data Generator"));
            if (this.defaultActors != null) {
                this.defaultProjectRoleActorCreator.create(projectRole, this.defaultActors);
            }
            if (this.projects != null && this.actors != null) {
                this.projectRoleActorCreator.create(projectRole, this.actors, this.projects);
            }
            this.emitter.emit(1);
            return projectRole;
        });
    }
    
    public ProjectRoleCreator withDefaultActors(final Collection<ApplicationUser> actors) {
        this.defaultActors = actors;
        return this;
    }
    
    public ProjectRoleCreator withActors(final Collection<Project> projects, final Collection<ApplicationUser> actors) {
        this.projects = projects;
        this.actors = actors;
        return this;
    }
}
